security:
    encoders:
        App\Entity\User: bcrypt

    providers:
        user:
            entity: { class: App\Entity\User, property: email }

    firewalls:
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            provider: user
            json_login:
                check_path: /login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern:   ^/
            provider: user
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # Implement token exchange in SecurityController (send request to login_check route)
        # and deny access for API endpoints by uncomment line at the bottom
        # - { path: ^/,      roles: IS_AUTHENTICATED_FULLY }
